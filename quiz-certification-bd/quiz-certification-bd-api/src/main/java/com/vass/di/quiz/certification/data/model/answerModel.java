/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vass.di.quiz.certification.data.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the answer service. Represents a row in the &quot;QUIZ_answer&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.vass.di.quiz.certification.data.model.impl.answerModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.vass.di.quiz.certification.data.model.impl.answerImpl</code>.
 * </p>
 *
 * @author dgarces
 * @see answer
 * @generated
 */
@ProviderType
public interface answerModel extends BaseModel<answer> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a answer model instance should use the {@link answer} interface instead.
	 */

	/**
	 * Returns the primary key of this answer.
	 *
	 * @return the primary key of this answer
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this answer.
	 *
	 * @param primaryKey the primary key of this answer
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the answer ID of this answer.
	 *
	 * @return the answer ID of this answer
	 */
	public long getAnswerId();

	/**
	 * Sets the answer ID of this answer.
	 *
	 * @param answerId the answer ID of this answer
	 */
	public void setAnswerId(long answerId);

	/**
	 * Returns the question ID of this answer.
	 *
	 * @return the question ID of this answer
	 */
	public long getQuestionId();

	/**
	 * Sets the question ID of this answer.
	 *
	 * @param questionId the question ID of this answer
	 */
	public void setQuestionId(long questionId);

	/**
	 * Returns the answer of this answer.
	 *
	 * @return the answer of this answer
	 */
	@AutoEscape
	public String getAnswer();

	/**
	 * Sets the answer of this answer.
	 *
	 * @param answer the answer of this answer
	 */
	public void setAnswer(String answer);

	/**
	 * Returns the correct of this answer.
	 *
	 * @return the correct of this answer
	 */
	public boolean getCorrect();

	/**
	 * Returns <code>true</code> if this answer is correct.
	 *
	 * @return <code>true</code> if this answer is correct; <code>false</code> otherwise
	 */
	public boolean isCorrect();

	/**
	 * Sets whether this answer is correct.
	 *
	 * @param correct the correct of this answer
	 */
	public void setCorrect(boolean correct);

}